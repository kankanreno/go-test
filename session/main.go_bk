package main

import (
	"fmt"
	"github.com/gorilla/securecookie"
	"github.com/gorilla/sessions"
	"log"
	"net/http"
)

// custom session stores
var store = sessions.NewFilesystemStore("./", securecookie.GenerateRandomKey(32))

func set(w http.ResponseWriter, r *http.Request) {
	session, _ := store.Get(r, "session_id")
	session.Values["account"] = "kankan"
	session.Values["name"] = "看看"
	if err := session.Save(r, w); err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}

	fmt.Fprintln(w, "Hello World")
}

func read(w http.ResponseWriter, r *http.Request) {
	session, _ := store.Get(r, "session_id")
	fmt.Fprintf(w, "account: %s, name: %s", session.Values["account"], session.Values["name"])
}

func main() {
	m := http.NewServeMux()
	m.HandleFunc("/set", set)
	m.HandleFunc("/read", read)

	server := &http.Server{
		Addr:    ":9999",
		Handler: m,
	}

	if err := server.ListenAndServe(); err != nil {
		log.Printf("Error from HTTP Server: %v", err)
	}
}
